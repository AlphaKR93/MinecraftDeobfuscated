/*
 * Decompiled with CFR 0.1.0 (FabricMC a830a72d).
 * 
 * Could not load the following classes:
 *  com.google.common.collect.ImmutableMap
 *  com.mojang.datafixers.DSL
 *  com.mojang.datafixers.DataFix
 *  com.mojang.datafixers.DataFixer
 *  com.mojang.datafixers.DataFixerBuilder
 *  com.mojang.datafixers.Typed
 *  com.mojang.datafixers.schemas.Schema
 *  com.mojang.logging.LogUtils
 *  it.unimi.dsi.fastutil.ints.Int2ObjectOpenHashMap
 *  java.lang.IllegalStateException
 *  java.lang.Integer
 *  java.lang.Object
 *  java.lang.Override
 *  java.lang.String
 *  java.util.Map
 *  java.util.Objects
 *  java.util.Set
 *  java.util.concurrent.Executor
 *  java.util.function.BiFunction
 *  java.util.function.Function
 *  java.util.function.IntFunction
 *  java.util.function.Predicate
 *  java.util.function.UnaryOperator
 *  org.slf4j.Logger
 */
package net.minecraft.util.datafix;

import com.google.common.collect.ImmutableMap;
import com.mojang.datafixers.DSL;
import com.mojang.datafixers.DataFix;
import com.mojang.datafixers.DataFixer;
import com.mojang.datafixers.DataFixerBuilder;
import com.mojang.datafixers.Typed;
import com.mojang.datafixers.schemas.Schema;
import com.mojang.logging.LogUtils;
import it.unimi.dsi.fastutil.ints.Int2ObjectOpenHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Set;
import java.util.concurrent.Executor;
import java.util.function.BiFunction;
import java.util.function.Function;
import java.util.function.IntFunction;
import java.util.function.Predicate;
import java.util.function.UnaryOperator;
import net.minecraft.SharedConstants;
import net.minecraft.Util;
import net.minecraft.util.datafix.DataFixerOptimizationOption;
import net.minecraft.util.datafix.fixes.AbstractArrowPickupFix;
import net.minecraft.util.datafix.fixes.AddFlagIfNotPresentFix;
import net.minecraft.util.datafix.fixes.AddNewChoices;
import net.minecraft.util.datafix.fixes.AdvancementsFix;
import net.minecraft.util.datafix.fixes.AdvancementsRenameFix;
import net.minecraft.util.datafix.fixes.AttributesRename;
import net.minecraft.util.datafix.fixes.BedItemColorFix;
import net.minecraft.util.datafix.fixes.BiomeFix;
import net.minecraft.util.datafix.fixes.BitStorageAlignFix;
import net.minecraft.util.datafix.fixes.BlendingDataFix;
import net.minecraft.util.datafix.fixes.BlendingDataRemoveFromNetherEndFix;
import net.minecraft.util.datafix.fixes.BlockEntityBannerColorFix;
import net.minecraft.util.datafix.fixes.BlockEntityBlockStateFix;
import net.minecraft.util.datafix.fixes.BlockEntityCustomNameToComponentFix;
import net.minecraft.util.datafix.fixes.BlockEntityIdFix;
import net.minecraft.util.datafix.fixes.BlockEntityJukeboxFix;
import net.minecraft.util.datafix.fixes.BlockEntityKeepPacked;
import net.minecraft.util.datafix.fixes.BlockEntityShulkerBoxColorFix;
import net.minecraft.util.datafix.fixes.BlockEntitySignTextStrictJsonFix;
import net.minecraft.util.datafix.fixes.BlockEntityUUIDFix;
import net.minecraft.util.datafix.fixes.BlockNameFlatteningFix;
import net.minecraft.util.datafix.fixes.BlockRenameFix;
import net.minecraft.util.datafix.fixes.BlockRenameFixWithJigsaw;
import net.minecraft.util.datafix.fixes.BlockStateStructureTemplateFix;
import net.minecraft.util.datafix.fixes.CatTypeFix;
import net.minecraft.util.datafix.fixes.CauldronRenameFix;
import net.minecraft.util.datafix.fixes.CavesAndCliffsRenames;
import net.minecraft.util.datafix.fixes.ChunkBedBlockEntityInjecterFix;
import net.minecraft.util.datafix.fixes.ChunkBiomeFix;
import net.minecraft.util.datafix.fixes.ChunkDeleteIgnoredLightDataFix;
import net.minecraft.util.datafix.fixes.ChunkHeightAndBiomeFix;
import net.minecraft.util.datafix.fixes.ChunkLightRemoveFix;
import net.minecraft.util.datafix.fixes.ChunkPalettedStorageFix;
import net.minecraft.util.datafix.fixes.ChunkProtoTickListFix;
import net.minecraft.util.datafix.fixes.ChunkRenamesFix;
import net.minecraft.util.datafix.fixes.ChunkStatusFix;
import net.minecraft.util.datafix.fixes.ChunkStatusFix2;
import net.minecraft.util.datafix.fixes.ChunkStructuresTemplateRenameFix;
import net.minecraft.util.datafix.fixes.ChunkToProtochunkFix;
import net.minecraft.util.datafix.fixes.ColorlessShulkerEntityFix;
import net.minecraft.util.datafix.fixes.CriteriaRenameFix;
import net.minecraft.util.datafix.fixes.DyeItemRenameFix;
import net.minecraft.util.datafix.fixes.EffectDurationFix;
import net.minecraft.util.datafix.fixes.EntityArmorStandSilentFix;
import net.minecraft.util.datafix.fixes.EntityBlockStateFix;
import net.minecraft.util.datafix.fixes.EntityCatSplitFix;
import net.minecraft.util.datafix.fixes.EntityCodSalmonFix;
import net.minecraft.util.datafix.fixes.EntityCustomNameToComponentFix;
import net.minecraft.util.datafix.fixes.EntityElderGuardianSplitFix;
import net.minecraft.util.datafix.fixes.EntityEquipmentToArmorAndHandFix;
import net.minecraft.util.datafix.fixes.EntityGoatMissingStateFix;
import net.minecraft.util.datafix.fixes.EntityHealthFix;
import net.minecraft.util.datafix.fixes.EntityHorseSaddleFix;
import net.minecraft.util.datafix.fixes.EntityHorseSplitFix;
import net.minecraft.util.datafix.fixes.EntityIdFix;
import net.minecraft.util.datafix.fixes.EntityItemFrameDirectionFix;
import net.minecraft.util.datafix.fixes.EntityMinecartIdentifiersFix;
import net.minecraft.util.datafix.fixes.EntityPaintingFieldsRenameFix;
import net.minecraft.util.datafix.fixes.EntityPaintingItemFrameDirectionFix;
import net.minecraft.util.datafix.fixes.EntityPaintingMotiveFix;
import net.minecraft.util.datafix.fixes.EntityProjectileOwnerFix;
import net.minecraft.util.datafix.fixes.EntityPufferfishRenameFix;
import net.minecraft.util.datafix.fixes.EntityRavagerRenameFix;
import net.minecraft.util.datafix.fixes.EntityRedundantChanceTagsFix;
import net.minecraft.util.datafix.fixes.EntityRidingToPassengersFix;
import net.minecraft.util.datafix.fixes.EntityShulkerColorFix;
import net.minecraft.util.datafix.fixes.EntityShulkerRotationFix;
import net.minecraft.util.datafix.fixes.EntitySkeletonSplitFix;
import net.minecraft.util.datafix.fixes.EntityStringUuidFix;
import net.minecraft.util.datafix.fixes.EntityTheRenameningFix;
import net.minecraft.util.datafix.fixes.EntityTippedArrowFix;
import net.minecraft.util.datafix.fixes.EntityUUIDFix;
import net.minecraft.util.datafix.fixes.EntityVariantFix;
import net.minecraft.util.datafix.fixes.EntityWolfColorFix;
import net.minecraft.util.datafix.fixes.EntityZombieSplitFix;
import net.minecraft.util.datafix.fixes.EntityZombieVillagerTypeFix;
import net.minecraft.util.datafix.fixes.EntityZombifiedPiglinRenameFix;
import net.minecraft.util.datafix.fixes.FilteredBooksFix;
import net.minecraft.util.datafix.fixes.FilteredSignsFix;
import net.minecraft.util.datafix.fixes.ForcePoiRebuild;
import net.minecraft.util.datafix.fixes.FurnaceRecipeFix;
import net.minecraft.util.datafix.fixes.GoatHornIdFix;
import net.minecraft.util.datafix.fixes.GossipUUIDFix;
import net.minecraft.util.datafix.fixes.HeightmapRenamingFix;
import net.minecraft.util.datafix.fixes.IglooMetadataRemovalFix;
import net.minecraft.util.datafix.fixes.ItemBannerColorFix;
import net.minecraft.util.datafix.fixes.ItemCustomNameToComponentFix;
import net.minecraft.util.datafix.fixes.ItemIdFix;
import net.minecraft.util.datafix.fixes.ItemLoreFix;
import net.minecraft.util.datafix.fixes.ItemPotionFix;
import net.minecraft.util.datafix.fixes.ItemRemoveBlockEntityTagFix;
import net.minecraft.util.datafix.fixes.ItemRenameFix;
import net.minecraft.util.datafix.fixes.ItemShulkerBoxColorFix;
import net.minecraft.util.datafix.fixes.ItemSpawnEggFix;
import net.minecraft.util.datafix.fixes.ItemStackEnchantmentNamesFix;
import net.minecraft.util.datafix.fixes.ItemStackMapIdFix;
import net.minecraft.util.datafix.fixes.ItemStackSpawnEggFix;
import net.minecraft.util.datafix.fixes.ItemStackTheFlatteningFix;
import net.minecraft.util.datafix.fixes.ItemStackUUIDFix;
import net.minecraft.util.datafix.fixes.ItemWaterPotionFix;
import net.minecraft.util.datafix.fixes.ItemWrittenBookPagesStrictJsonFix;
import net.minecraft.util.datafix.fixes.JigsawPropertiesFix;
import net.minecraft.util.datafix.fixes.JigsawRotationFix;
import net.minecraft.util.datafix.fixes.LeavesFix;
import net.minecraft.util.datafix.fixes.LevelDataGeneratorOptionsFix;
import net.minecraft.util.datafix.fixes.LevelFlatGeneratorInfoFix;
import net.minecraft.util.datafix.fixes.LevelUUIDFix;
import net.minecraft.util.datafix.fixes.MapIdFix;
import net.minecraft.util.datafix.fixes.MemoryExpiryDataFix;
import net.minecraft.util.datafix.fixes.MissingDimensionFix;
import net.minecraft.util.datafix.fixes.MobSpawnerEntityIdentifiersFix;
import net.minecraft.util.datafix.fixes.NamedEntityFix;
import net.minecraft.util.datafix.fixes.NewVillageFix;
import net.minecraft.util.datafix.fixes.ObjectiveDisplayNameFix;
import net.minecraft.util.datafix.fixes.ObjectiveRenderTypeFix;
import net.minecraft.util.datafix.fixes.OminousBannerBlockEntityRenameFix;
import net.minecraft.util.datafix.fixes.OminousBannerRenameFix;
import net.minecraft.util.datafix.fixes.OptionsAccessibilityOnboardFix;
import net.minecraft.util.datafix.fixes.OptionsAddTextBackgroundFix;
import net.minecraft.util.datafix.fixes.OptionsAmbientOcclusionFix;
import net.minecraft.util.datafix.fixes.OptionsForceVBOFix;
import net.minecraft.util.datafix.fixes.OptionsKeyLwjgl3Fix;
import net.minecraft.util.datafix.fixes.OptionsKeyTranslationFix;
import net.minecraft.util.datafix.fixes.OptionsLowerCaseLanguageFix;
import net.minecraft.util.datafix.fixes.OptionsProgrammerArtFix;
import net.minecraft.util.datafix.fixes.OptionsRenameFieldFix;
import net.minecraft.util.datafix.fixes.OverreachingTickFix;
import net.minecraft.util.datafix.fixes.PlayerUUIDFix;
import net.minecraft.util.datafix.fixes.PoiTypeRemoveFix;
import net.minecraft.util.datafix.fixes.PoiTypeRenameFix;
import net.minecraft.util.datafix.fixes.RecipesFix;
import net.minecraft.util.datafix.fixes.RecipesRenameFix;
import net.minecraft.util.datafix.fixes.RecipesRenameningFix;
import net.minecraft.util.datafix.fixes.RedstoneWireConnectionsFix;
import net.minecraft.util.datafix.fixes.References;
import net.minecraft.util.datafix.fixes.RemoveGolemGossipFix;
import net.minecraft.util.datafix.fixes.RenameBiomesFix;
import net.minecraft.util.datafix.fixes.RenamedCoralFansFix;
import net.minecraft.util.datafix.fixes.RenamedCoralFix;
import net.minecraft.util.datafix.fixes.ReorganizePoi;
import net.minecraft.util.datafix.fixes.SavedDataFeaturePoolElementFix;
import net.minecraft.util.datafix.fixes.SavedDataUUIDFix;
import net.minecraft.util.datafix.fixes.SavedDataVillageCropFix;
import net.minecraft.util.datafix.fixes.SimpleRenameFix;
import net.minecraft.util.datafix.fixes.SpawnerDataFix;
import net.minecraft.util.datafix.fixes.StatsCounterFix;
import net.minecraft.util.datafix.fixes.StatsRenameFix;
import net.minecraft.util.datafix.fixes.StriderGravityFix;
import net.minecraft.util.datafix.fixes.StructureReferenceCountFix;
import net.minecraft.util.datafix.fixes.StructureSettingsFlattenFix;
import net.minecraft.util.datafix.fixes.StructuresBecomeConfiguredFix;
import net.minecraft.util.datafix.fixes.TeamDisplayNameFix;
import net.minecraft.util.datafix.fixes.TrappedChestBlockEntityFix;
import net.minecraft.util.datafix.fixes.VariantRenameFix;
import net.minecraft.util.datafix.fixes.VillagerDataFix;
import net.minecraft.util.datafix.fixes.VillagerFollowRangeFix;
import net.minecraft.util.datafix.fixes.VillagerRebuildLevelAndXpFix;
import net.minecraft.util.datafix.fixes.VillagerTradeFix;
import net.minecraft.util.datafix.fixes.WallPropertyFix;
import net.minecraft.util.datafix.fixes.WeaponSmithChestLootTableFix;
import net.minecraft.util.datafix.fixes.WorldGenSettingsDisallowOldCustomWorldsFix;
import net.minecraft.util.datafix.fixes.WorldGenSettingsFix;
import net.minecraft.util.datafix.fixes.WorldGenSettingsHeightAndBiomeFix;
import net.minecraft.util.datafix.fixes.WriteAndReadFix;
import net.minecraft.util.datafix.fixes.ZombieVillagerRebuildXpFix;
import net.minecraft.util.datafix.schemas.NamespacedSchema;
import net.minecraft.util.datafix.schemas.V100;
import net.minecraft.util.datafix.schemas.V102;
import net.minecraft.util.datafix.schemas.V1022;
import net.minecraft.util.datafix.schemas.V106;
import net.minecraft.util.datafix.schemas.V107;
import net.minecraft.util.datafix.schemas.V1125;
import net.minecraft.util.datafix.schemas.V135;
import net.minecraft.util.datafix.schemas.V143;
import net.minecraft.util.datafix.schemas.V1451;
import net.minecraft.util.datafix.schemas.V1451_1;
import net.minecraft.util.datafix.schemas.V1451_2;
import net.minecraft.util.datafix.schemas.V1451_3;
import net.minecraft.util.datafix.schemas.V1451_4;
import net.minecraft.util.datafix.schemas.V1451_5;
import net.minecraft.util.datafix.schemas.V1451_6;
import net.minecraft.util.datafix.schemas.V1451_7;
import net.minecraft.util.datafix.schemas.V1460;
import net.minecraft.util.datafix.schemas.V1466;
import net.minecraft.util.datafix.schemas.V1470;
import net.minecraft.util.datafix.schemas.V1481;
import net.minecraft.util.datafix.schemas.V1483;
import net.minecraft.util.datafix.schemas.V1486;
import net.minecraft.util.datafix.schemas.V1510;
import net.minecraft.util.datafix.schemas.V1800;
import net.minecraft.util.datafix.schemas.V1801;
import net.minecraft.util.datafix.schemas.V1904;
import net.minecraft.util.datafix.schemas.V1906;
import net.minecraft.util.datafix.schemas.V1909;
import net.minecraft.util.datafix.schemas.V1920;
import net.minecraft.util.datafix.schemas.V1928;
import net.minecraft.util.datafix.schemas.V1929;
import net.minecraft.util.datafix.schemas.V1931;
import net.minecraft.util.datafix.schemas.V2100;
import net.minecraft.util.datafix.schemas.V2501;
import net.minecraft.util.datafix.schemas.V2502;
import net.minecraft.util.datafix.schemas.V2505;
import net.minecraft.util.datafix.schemas.V2509;
import net.minecraft.util.datafix.schemas.V2519;
import net.minecraft.util.datafix.schemas.V2522;
import net.minecraft.util.datafix.schemas.V2551;
import net.minecraft.util.datafix.schemas.V2568;
import net.minecraft.util.datafix.schemas.V2571;
import net.minecraft.util.datafix.schemas.V2684;
import net.minecraft.util.datafix.schemas.V2686;
import net.minecraft.util.datafix.schemas.V2688;
import net.minecraft.util.datafix.schemas.V2704;
import net.minecraft.util.datafix.schemas.V2707;
import net.minecraft.util.datafix.schemas.V2831;
import net.minecraft.util.datafix.schemas.V2832;
import net.minecraft.util.datafix.schemas.V2842;
import net.minecraft.util.datafix.schemas.V3076;
import net.minecraft.util.datafix.schemas.V3078;
import net.minecraft.util.datafix.schemas.V3081;
import net.minecraft.util.datafix.schemas.V3082;
import net.minecraft.util.datafix.schemas.V3083;
import net.minecraft.util.datafix.schemas.V3202;
import net.minecraft.util.datafix.schemas.V3203;
import net.minecraft.util.datafix.schemas.V3204;
import net.minecraft.util.datafix.schemas.V501;
import net.minecraft.util.datafix.schemas.V700;
import net.minecraft.util.datafix.schemas.V701;
import net.minecraft.util.datafix.schemas.V702;
import net.minecraft.util.datafix.schemas.V703;
import net.minecraft.util.datafix.schemas.V704;
import net.minecraft.util.datafix.schemas.V705;
import net.minecraft.util.datafix.schemas.V808;
import net.minecraft.util.datafix.schemas.V99;
import org.slf4j.Logger;

public class DataFixers {
    private static final Logger LOGGER = LogUtils.getLogger();
    private static final BiFunction<Integer, Schema, Schema> SAME = Schema::new;
    private static final BiFunction<Integer, Schema, Schema> SAME_NAMESPACED = NamespacedSchema::new;
    private static final DataFixer dataFixer = DataFixers.createFixerUpper();
    public static final int BLENDING_VERSION = 3088;

    private DataFixers() {
    }

    public static DataFixer getDataFixer() {
        return dataFixer;
    }

    private static synchronized DataFixer createFixerUpper() {
        DataFixerBuilder $$0 = new DataFixerBuilder(SharedConstants.getCurrentVersion().getDataVersion().getVersion());
        DataFixers.addFixers($$0);
        boolean $$1 = switch (SharedConstants.DATAFIXER_OPTIMIZATION_OPTION) {
            case DataFixerOptimizationOption.UNINITIALIZED_OPTIMIZED -> true;
            case DataFixerOptimizationOption.UNINITIALIZED_UNOPTIMIZED -> false;
            default -> throw new IllegalStateException("Already loaded");
        };
        SharedConstants.DATAFIXER_OPTIMIZATION_OPTION = $$1 ? DataFixerOptimizationOption.INITIALIZED_OPTIMIZED : DataFixerOptimizationOption.INITIALIZED_UNOPTIMIZED;
        LOGGER.info("Building {} datafixer", (Object)($$1 ? "optimized" : "unoptimized"));
        return $$1 ? $$0.buildOptimized((Executor)Util.bootstrapExecutor()) : $$0.buildUnoptimized();
    }

    private static void addFixers(DataFixerBuilder $$02) {
        Schema $$12 = $$02.addSchema(99, V99::new);
        Schema $$2 = $$02.addSchema(100, V100::new);
        $$02.addFixer((DataFix)new EntityEquipmentToArmorAndHandFix($$2, true));
        Schema $$3 = $$02.addSchema(101, SAME);
        $$02.addFixer((DataFix)new BlockEntitySignTextStrictJsonFix($$3, false));
        Schema $$4 = $$02.addSchema(102, V102::new);
        $$02.addFixer((DataFix)new ItemIdFix($$4, true));
        $$02.addFixer((DataFix)new ItemPotionFix($$4, false));
        Schema $$5 = $$02.addSchema(105, SAME);
        $$02.addFixer((DataFix)new ItemSpawnEggFix($$5, true));
        Schema $$6 = $$02.addSchema(106, V106::new);
        $$02.addFixer((DataFix)new MobSpawnerEntityIdentifiersFix($$6, true));
        Schema $$7 = $$02.addSchema(107, V107::new);
        $$02.addFixer((DataFix)new EntityMinecartIdentifiersFix($$7, true));
        Schema $$8 = $$02.addSchema(108, SAME);
        $$02.addFixer((DataFix)new EntityStringUuidFix($$8, true));
        Schema $$9 = $$02.addSchema(109, SAME);
        $$02.addFixer((DataFix)new EntityHealthFix($$9, true));
        Schema $$10 = $$02.addSchema(110, SAME);
        $$02.addFixer((DataFix)new EntityHorseSaddleFix($$10, true));
        Schema $$11 = $$02.addSchema(111, SAME);
        $$02.addFixer((DataFix)new EntityPaintingItemFrameDirectionFix($$11, true));
        Schema $$122 = $$02.addSchema(113, SAME);
        $$02.addFixer((DataFix)new EntityRedundantChanceTagsFix($$122, true));
        Schema $$13 = $$02.addSchema(135, V135::new);
        $$02.addFixer((DataFix)new EntityRidingToPassengersFix($$13, true));
        Schema $$14 = $$02.addSchema(143, V143::new);
        $$02.addFixer((DataFix)new EntityTippedArrowFix($$14, true));
        Schema $$15 = $$02.addSchema(147, SAME);
        $$02.addFixer((DataFix)new EntityArmorStandSilentFix($$15, true));
        Schema $$16 = $$02.addSchema(165, SAME);
        $$02.addFixer((DataFix)new ItemWrittenBookPagesStrictJsonFix($$16, true));
        Schema $$17 = $$02.addSchema(501, V501::new);
        $$02.addFixer((DataFix)new AddNewChoices($$17, "Add 1.10 entities fix", References.ENTITY));
        Schema $$18 = $$02.addSchema(502, SAME);
        $$02.addFixer(ItemRenameFix.create($$18, "cooked_fished item renamer", (Function<String, String>)((Function)$$0 -> Objects.equals((Object)NamespacedSchema.ensureNamespaced($$0), (Object)"minecraft:cooked_fished") ? "minecraft:cooked_fish" : $$0)));
        $$02.addFixer((DataFix)new EntityZombieVillagerTypeFix($$18, false));
        Schema $$19 = $$02.addSchema(505, SAME);
        $$02.addFixer((DataFix)new OptionsForceVBOFix($$19, false));
        Schema $$20 = $$02.addSchema(700, V700::new);
        $$02.addFixer((DataFix)new EntityElderGuardianSplitFix($$20, true));
        Schema $$21 = $$02.addSchema(701, V701::new);
        $$02.addFixer((DataFix)new EntitySkeletonSplitFix($$21, true));
        Schema $$22 = $$02.addSchema(702, V702::new);
        $$02.addFixer((DataFix)new EntityZombieSplitFix($$22, true));
        Schema $$23 = $$02.addSchema(703, V703::new);
        $$02.addFixer((DataFix)new EntityHorseSplitFix($$23, true));
        Schema $$24 = $$02.addSchema(704, V704::new);
        $$02.addFixer((DataFix)new BlockEntityIdFix($$24, true));
        Schema $$25 = $$02.addSchema(705, V705::new);
        $$02.addFixer((DataFix)new EntityIdFix($$25, true));
        Schema $$26 = $$02.addSchema(804, SAME_NAMESPACED);
        $$02.addFixer((DataFix)new ItemBannerColorFix($$26, true));
        Schema $$27 = $$02.addSchema(806, SAME_NAMESPACED);
        $$02.addFixer((DataFix)new ItemWaterPotionFix($$27, false));
        Schema $$28 = $$02.addSchema(808, V808::new);
        $$02.addFixer((DataFix)new AddNewChoices($$28, "added shulker box", References.BLOCK_ENTITY));
        Schema $$29 = $$02.addSchema(808, 1, SAME_NAMESPACED);
        $$02.addFixer((DataFix)new EntityShulkerColorFix($$29, false));
        Schema $$30 = $$02.addSchema(813, SAME_NAMESPACED);
        $$02.addFixer((DataFix)new ItemShulkerBoxColorFix($$30, false));
        $$02.addFixer((DataFix)new BlockEntityShulkerBoxColorFix($$30, false));
        Schema $$31 = $$02.addSchema(816, SAME_NAMESPACED);
        $$02.addFixer((DataFix)new OptionsLowerCaseLanguageFix($$31, false));
        Schema $$32 = $$02.addSchema(820, SAME_NAMESPACED);
        $$02.addFixer(ItemRenameFix.create($$32, "totem item renamer", DataFixers.createRenamer("minecraft:totem", "minecraft:totem_of_undying")));
        Schema $$33 = $$02.addSchema(1022, V1022::new);
        $$02.addFixer((DataFix)new WriteAndReadFix($$33, "added shoulder entities to players", References.PLAYER));
        Schema $$34 = $$02.addSchema(1125, V1125::new);
        $$02.addFixer((DataFix)new ChunkBedBlockEntityInjecterFix($$34, true));
        $$02.addFixer((DataFix)new BedItemColorFix($$34, false));
        Schema $$35 = $$02.addSchema(1344, SAME_NAMESPACED);
        $$02.addFixer((DataFix)new OptionsKeyLwjgl3Fix($$35, false));
        Schema $$36 = $$02.addSchema(1446, SAME_NAMESPACED);
        $$02.addFixer((DataFix)new OptionsKeyTranslationFix($$36, false));
        Schema $$37 = $$02.addSchema(1450, SAME_NAMESPACED);
        $$02.addFixer((DataFix)new BlockStateStructureTemplateFix($$37, false));
        Schema $$38 = $$02.addSchema(1451, V1451::new);
        $$02.addFixer((DataFix)new AddNewChoices($$38, "AddTrappedChestFix", References.BLOCK_ENTITY));
        Schema $$39 = $$02.addSchema(1451, 1, V1451_1::new);
        $$02.addFixer((DataFix)new ChunkPalettedStorageFix($$39, true));
        Schema $$40 = $$02.addSchema(1451, 2, V1451_2::new);
        $$02.addFixer((DataFix)new BlockEntityBlockStateFix($$40, true));
        Schema $$41 = $$02.addSchema(1451, 3, V1451_3::new);
        $$02.addFixer((DataFix)new EntityBlockStateFix($$41, true));
        $$02.addFixer((DataFix)new ItemStackMapIdFix($$41, false));
        Schema $$42 = $$02.addSchema(1451, 4, V1451_4::new);
        $$02.addFixer((DataFix)new BlockNameFlatteningFix($$42, true));
        $$02.addFixer((DataFix)new ItemStackTheFlatteningFix($$42, false));
        Schema $$43 = $$02.addSchema(1451, 5, V1451_5::new);
        $$02.addFixer((DataFix)new ItemRemoveBlockEntityTagFix($$43, false, (Set<String>)Set.of((Object[])new String[]{"minecraft:note_block", "minecraft:flower_pot", "minecraft:dandelion", "minecraft:poppy", "minecraft:blue_orchid", "minecraft:allium", "minecraft:azure_bluet", "minecraft:red_tulip", "minecraft:orange_tulip", "minecraft:white_tulip", "minecraft:pink_tulip", "minecraft:oxeye_daisy", "minecraft:cactus", "minecraft:brown_mushroom", "minecraft:red_mushroom", "minecraft:oak_sapling", "minecraft:spruce_sapling", "minecraft:birch_sapling", "minecraft:jungle_sapling", "minecraft:acacia_sapling", "minecraft:dark_oak_sapling", "minecraft:dead_bush", "minecraft:fern"})));
        $$02.addFixer((DataFix)new AddNewChoices($$43, "RemoveNoteBlockFlowerPotFix", References.BLOCK_ENTITY));
        $$02.addFixer((DataFix)new ItemStackSpawnEggFix($$43, false, "minecraft:spawn_egg"));
        $$02.addFixer((DataFix)new EntityWolfColorFix($$43, false));
        $$02.addFixer((DataFix)new BlockEntityBannerColorFix($$43, false));
        $$02.addFixer((DataFix)new LevelFlatGeneratorInfoFix($$43, false));
        Schema $$44 = $$02.addSchema(1451, 6, V1451_6::new);
        $$02.addFixer((DataFix)new StatsCounterFix($$44, true));
        $$02.addFixer((DataFix)new WriteAndReadFix($$44, "Rewrite objectives", References.OBJECTIVE));
        $$02.addFixer((DataFix)new BlockEntityJukeboxFix($$44, false));
        Schema $$45 = $$02.addSchema(1451, 7, V1451_7::new);
        $$02.addFixer((DataFix)new SavedDataVillageCropFix($$45, true));
        Schema $$46 = $$02.addSchema(1451, 7, SAME_NAMESPACED);
        $$02.addFixer((DataFix)new VillagerTradeFix($$46, false));
        Schema $$47 = $$02.addSchema(1456, SAME_NAMESPACED);
        $$02.addFixer((DataFix)new EntityItemFrameDirectionFix($$47, false));
        Schema $$48 = $$02.addSchema(1458, SAME_NAMESPACED);
        $$02.addFixer((DataFix)new EntityCustomNameToComponentFix($$48, false));
        $$02.addFixer((DataFix)new ItemCustomNameToComponentFix($$48, false));
        $$02.addFixer((DataFix)new BlockEntityCustomNameToComponentFix($$48, false));
        Schema $$49 = $$02.addSchema(1460, V1460::new);
        $$02.addFixer((DataFix)new EntityPaintingMotiveFix($$49, false));
        Schema $$50 = $$02.addSchema(1466, V1466::new);
        $$02.addFixer((DataFix)new ChunkToProtochunkFix($$50, true));
        Schema $$51 = $$02.addSchema(1470, V1470::new);
        $$02.addFixer((DataFix)new AddNewChoices($$51, "Add 1.13 entities fix", References.ENTITY));
        Schema $$52 = $$02.addSchema(1474, SAME_NAMESPACED);
        $$02.addFixer((DataFix)new ColorlessShulkerEntityFix($$52, false));
        $$02.addFixer(BlockRenameFix.create($$52, "Colorless shulker block fixer", (Function<String, String>)((Function)$$0 -> Objects.equals((Object)NamespacedSchema.ensureNamespaced($$0), (Object)"minecraft:purple_shulker_box") ? "minecraft:shulker_box" : $$0)));
        $$02.addFixer(ItemRenameFix.create($$52, "Colorless shulker item fixer", (Function<String, String>)((Function)$$0 -> Objects.equals((Object)NamespacedSchema.ensureNamespaced($$0), (Object)"minecraft:purple_shulker_box") ? "minecraft:shulker_box" : $$0)));
        Schema $$53 = $$02.addSchema(1475, SAME_NAMESPACED);
        $$02.addFixer(BlockRenameFix.create($$53, "Flowing fixer", DataFixers.createRenamer((Map<String, String>)ImmutableMap.of((Object)"minecraft:flowing_water", (Object)"minecraft:water", (Object)"minecraft:flowing_lava", (Object)"minecraft:lava"))));
        Schema $$54 = $$02.addSchema(1480, SAME_NAMESPACED);
        $$02.addFixer(BlockRenameFix.create($$54, "Rename coral blocks", DataFixers.createRenamer(RenamedCoralFix.RENAMED_IDS)));
        $$02.addFixer(ItemRenameFix.create($$54, "Rename coral items", DataFixers.createRenamer(RenamedCoralFix.RENAMED_IDS)));
        Schema $$55 = $$02.addSchema(1481, V1481::new);
        $$02.addFixer((DataFix)new AddNewChoices($$55, "Add conduit", References.BLOCK_ENTITY));
        Schema $$56 = $$02.addSchema(1483, V1483::new);
        $$02.addFixer((DataFix)new EntityPufferfishRenameFix($$56, true));
        $$02.addFixer(ItemRenameFix.create($$56, "Rename pufferfish egg item", DataFixers.createRenamer(EntityPufferfishRenameFix.RENAMED_IDS)));
        Schema $$57 = $$02.addSchema(1484, SAME_NAMESPACED);
        $$02.addFixer(ItemRenameFix.create($$57, "Rename seagrass items", DataFixers.createRenamer((Map<String, String>)ImmutableMap.of((Object)"minecraft:sea_grass", (Object)"minecraft:seagrass", (Object)"minecraft:tall_sea_grass", (Object)"minecraft:tall_seagrass"))));
        $$02.addFixer(BlockRenameFix.create($$57, "Rename seagrass blocks", DataFixers.createRenamer((Map<String, String>)ImmutableMap.of((Object)"minecraft:sea_grass", (Object)"minecraft:seagrass", (Object)"minecraft:tall_sea_grass", (Object)"minecraft:tall_seagrass"))));
        $$02.addFixer((DataFix)new HeightmapRenamingFix($$57, false));
        Schema $$58 = $$02.addSchema(1486, V1486::new);
        $$02.addFixer((DataFix)new EntityCodSalmonFix($$58, true));
        $$02.addFixer(ItemRenameFix.create($$58, "Rename cod/salmon egg items", DataFixers.createRenamer(EntityCodSalmonFix.RENAMED_EGG_IDS)));
        Schema $$59 = $$02.addSchema(1487, SAME_NAMESPACED);
        $$02.addFixer(ItemRenameFix.create($$59, "Rename prismarine_brick(s)_* blocks", DataFixers.createRenamer((Map<String, String>)ImmutableMap.of((Object)"minecraft:prismarine_bricks_slab", (Object)"minecraft:prismarine_brick_slab", (Object)"minecraft:prismarine_bricks_stairs", (Object)"minecraft:prismarine_brick_stairs"))));
        $$02.addFixer(BlockRenameFix.create($$59, "Rename prismarine_brick(s)_* items", DataFixers.createRenamer((Map<String, String>)ImmutableMap.of((Object)"minecraft:prismarine_bricks_slab", (Object)"minecraft:prismarine_brick_slab", (Object)"minecraft:prismarine_bricks_stairs", (Object)"minecraft:prismarine_brick_stairs"))));
        Schema $$60 = $$02.addSchema(1488, SAME_NAMESPACED);
        $$02.addFixer(BlockRenameFix.create($$60, "Rename kelp/kelptop", DataFixers.createRenamer((Map<String, String>)ImmutableMap.of((Object)"minecraft:kelp_top", (Object)"minecraft:kelp", (Object)"minecraft:kelp", (Object)"minecraft:kelp_plant"))));
        $$02.addFixer(ItemRenameFix.create($$60, "Rename kelptop", DataFixers.createRenamer("minecraft:kelp_top", "minecraft:kelp")));
        $$02.addFixer((DataFix)new NamedEntityFix($$60, false, "Command block block entity custom name fix", References.BLOCK_ENTITY, "minecraft:command_block"){

            @Override
            protected Typed<?> fix(Typed<?> $$0) {
                return $$0.update(DSL.remainderFinder(), EntityCustomNameToComponentFix::fixTagCustomName);
            }
        });
        $$02.addFixer((DataFix)new NamedEntityFix($$60, false, "Command block minecart custom name fix", References.ENTITY, "minecraft:commandblock_minecart"){

            @Override
            protected Typed<?> fix(Typed<?> $$0) {
                return $$0.update(DSL.remainderFinder(), EntityCustomNameToComponentFix::fixTagCustomName);
            }
        });
        $$02.addFixer((DataFix)new IglooMetadataRemovalFix($$60, false));
        Schema $$61 = $$02.addSchema(1490, SAME_NAMESPACED);
        $$02.addFixer(BlockRenameFix.create($$61, "Rename melon_block", DataFixers.createRenamer("minecraft:melon_block", "minecraft:melon")));
        $$02.addFixer(ItemRenameFix.create($$61, "Rename melon_block/melon/speckled_melon", DataFixers.createRenamer((Map<String, String>)ImmutableMap.of((Object)"minecraft:melon_block", (Object)"minecraft:melon", (Object)"minecraft:melon", (Object)"minecraft:melon_slice", (Object)"minecraft:speckled_melon", (Object)"minecraft:glistering_melon_slice"))));
        Schema $$62 = $$02.addSchema(1492, SAME_NAMESPACED);
        $$02.addFixer((DataFix)new ChunkStructuresTemplateRenameFix($$62, false));
        Schema $$63 = $$02.addSchema(1494, SAME_NAMESPACED);
        $$02.addFixer((DataFix)new ItemStackEnchantmentNamesFix($$63, false));
        Schema $$64 = $$02.addSchema(1496, SAME_NAMESPACED);
        $$02.addFixer((DataFix)new LeavesFix($$64, false));
        Schema $$65 = $$02.addSchema(1500, SAME_NAMESPACED);
        $$02.addFixer((DataFix)new BlockEntityKeepPacked($$65, false));
        Schema $$66 = $$02.addSchema(1501, SAME_NAMESPACED);
        $$02.addFixer((DataFix)new AdvancementsFix($$66, false));
        Schema $$67 = $$02.addSchema(1502, SAME_NAMESPACED);
        $$02.addFixer((DataFix)new RecipesFix($$67, false));
        Schema $$68 = $$02.addSchema(1506, SAME_NAMESPACED);
        $$02.addFixer((DataFix)new LevelDataGeneratorOptionsFix($$68, false));
        Schema $$69 = $$02.addSchema(1510, V1510::new);
        $$02.addFixer(BlockRenameFix.create($$69, "Block renamening fix", DataFixers.createRenamer(EntityTheRenameningFix.RENAMED_BLOCKS)));
        $$02.addFixer(ItemRenameFix.create($$69, "Item renamening fix", DataFixers.createRenamer(EntityTheRenameningFix.RENAMED_ITEMS)));
        $$02.addFixer((DataFix)new RecipesRenameningFix($$69, false));
        $$02.addFixer((DataFix)new EntityTheRenameningFix($$69, true));
        $$02.addFixer((DataFix)new StatsRenameFix($$69, "SwimStatsRenameFix", (Map<String, String>)ImmutableMap.of((Object)"minecraft:swim_one_cm", (Object)"minecraft:walk_on_water_one_cm", (Object)"minecraft:dive_one_cm", (Object)"minecraft:walk_under_water_one_cm")));
        Schema $$70 = $$02.addSchema(1514, SAME_NAMESPACED);
        $$02.addFixer((DataFix)new ObjectiveDisplayNameFix($$70, false));
        $$02.addFixer((DataFix)new TeamDisplayNameFix($$70, false));
        $$02.addFixer((DataFix)new ObjectiveRenderTypeFix($$70, false));
        Schema $$71 = $$02.addSchema(1515, SAME_NAMESPACED);
        $$02.addFixer(BlockRenameFix.create($$71, "Rename coral fan blocks", DataFixers.createRenamer(RenamedCoralFansFix.RENAMED_IDS)));
        Schema $$72 = $$02.addSchema(1624, SAME_NAMESPACED);
        $$02.addFixer((DataFix)new TrappedChestBlockEntityFix($$72, false));
        Schema $$73 = $$02.addSchema(1800, V1800::new);
        $$02.addFixer((DataFix)new AddNewChoices($$73, "Added 1.14 mobs fix", References.ENTITY));
        $$02.addFixer(ItemRenameFix.create($$73, "Rename dye items", DataFixers.createRenamer(DyeItemRenameFix.RENAMED_IDS)));
        Schema $$74 = $$02.addSchema(1801, V1801::new);
        $$02.addFixer((DataFix)new AddNewChoices($$74, "Added Illager Beast", References.ENTITY));
        Schema $$75 = $$02.addSchema(1802, SAME_NAMESPACED);
        $$02.addFixer(BlockRenameFix.create($$75, "Rename sign blocks & stone slabs", DataFixers.createRenamer((Map<String, String>)ImmutableMap.of((Object)"minecraft:stone_slab", (Object)"minecraft:smooth_stone_slab", (Object)"minecraft:sign", (Object)"minecraft:oak_sign", (Object)"minecraft:wall_sign", (Object)"minecraft:oak_wall_sign"))));
        $$02.addFixer(ItemRenameFix.create($$75, "Rename sign item & stone slabs", DataFixers.createRenamer((Map<String, String>)ImmutableMap.of((Object)"minecraft:stone_slab", (Object)"minecraft:smooth_stone_slab", (Object)"minecraft:sign", (Object)"minecraft:oak_sign"))));
        Schema $$76 = $$02.addSchema(1803, SAME_NAMESPACED);
        $$02.addFixer((DataFix)new ItemLoreFix($$76, false));
        Schema $$77 = $$02.addSchema(1904, V1904::new);
        $$02.addFixer((DataFix)new AddNewChoices($$77, "Added Cats", References.ENTITY));
        $$02.addFixer((DataFix)new EntityCatSplitFix($$77, false));
        Schema $$78 = $$02.addSchema(1905, SAME_NAMESPACED);
        $$02.addFixer((DataFix)new ChunkStatusFix($$78, false));
        Schema $$79 = $$02.addSchema(1906, V1906::new);
        $$02.addFixer((DataFix)new AddNewChoices($$79, "Add POI Blocks", References.BLOCK_ENTITY));
        Schema $$80 = $$02.addSchema(1909, V1909::new);
        $$02.addFixer((DataFix)new AddNewChoices($$80, "Add jigsaw", References.BLOCK_ENTITY));
        Schema $$81 = $$02.addSchema(1911, SAME_NAMESPACED);
        $$02.addFixer((DataFix)new ChunkStatusFix2($$81, false));
        Schema $$82 = $$02.addSchema(1914, SAME_NAMESPACED);
        $$02.addFixer((DataFix)new WeaponSmithChestLootTableFix($$82, false));
        Schema $$83 = $$02.addSchema(1917, SAME_NAMESPACED);
        $$02.addFixer((DataFix)new CatTypeFix($$83, false));
        Schema $$84 = $$02.addSchema(1918, SAME_NAMESPACED);
        $$02.addFixer((DataFix)new VillagerDataFix($$84, "minecraft:villager"));
        $$02.addFixer((DataFix)new VillagerDataFix($$84, "minecraft:zombie_villager"));
        Schema $$85 = $$02.addSchema(1920, V1920::new);
        $$02.addFixer((DataFix)new NewVillageFix($$85, false));
        $$02.addFixer((DataFix)new AddNewChoices($$85, "Add campfire", References.BLOCK_ENTITY));
        Schema $$86 = $$02.addSchema(1925, SAME_NAMESPACED);
        $$02.addFixer((DataFix)new MapIdFix($$86, false));
        Schema $$87 = $$02.addSchema(1928, V1928::new);
        $$02.addFixer((DataFix)new EntityRavagerRenameFix($$87, true));
        $$02.addFixer(ItemRenameFix.create($$87, "Rename ravager egg item", DataFixers.createRenamer(EntityRavagerRenameFix.RENAMED_IDS)));
        Schema $$88 = $$02.addSchema(1929, V1929::new);
        $$02.addFixer((DataFix)new AddNewChoices($$88, "Add Wandering Trader and Trader Llama", References.ENTITY));
        Schema $$89 = $$02.addSchema(1931, V1931::new);
        $$02.addFixer((DataFix)new AddNewChoices($$89, "Added Fox", References.ENTITY));
        Schema $$90 = $$02.addSchema(1936, SAME_NAMESPACED);
        $$02.addFixer((DataFix)new OptionsAddTextBackgroundFix($$90, false));
        Schema $$91 = $$02.addSchema(1946, SAME_NAMESPACED);
        $$02.addFixer((DataFix)new ReorganizePoi($$91, false));
        Schema $$92 = $$02.addSchema(1948, SAME_NAMESPACED);
        $$02.addFixer((DataFix)new OminousBannerRenameFix($$92));
        Schema $$93 = $$02.addSchema(1953, SAME_NAMESPACED);
        $$02.addFixer((DataFix)new OminousBannerBlockEntityRenameFix($$93, false));
        Schema $$94 = $$02.addSchema(1955, SAME_NAMESPACED);
        $$02.addFixer((DataFix)new VillagerRebuildLevelAndXpFix($$94, false));
        $$02.addFixer((DataFix)new ZombieVillagerRebuildXpFix($$94, false));
        Schema $$95 = $$02.addSchema(1961, SAME_NAMESPACED);
        $$02.addFixer((DataFix)new ChunkLightRemoveFix($$95, false));
        Schema $$96 = $$02.addSchema(1963, SAME_NAMESPACED);
        $$02.addFixer((DataFix)new RemoveGolemGossipFix($$96, false));
        Schema $$97 = $$02.addSchema(2100, V2100::new);
        $$02.addFixer((DataFix)new AddNewChoices($$97, "Added Bee and Bee Stinger", References.ENTITY));
        $$02.addFixer((DataFix)new AddNewChoices($$97, "Add beehive", References.BLOCK_ENTITY));
        $$02.addFixer((DataFix)new RecipesRenameFix($$97, false, "Rename sugar recipe", (Function<String, String>)DataFixers.createRenamer("minecraft:sugar", "sugar_from_sugar_cane")));
        $$02.addFixer((DataFix)new AdvancementsRenameFix($$97, false, "Rename sugar recipe advancement", (Function<String, String>)DataFixers.createRenamer("minecraft:recipes/misc/sugar", "minecraft:recipes/misc/sugar_from_sugar_cane")));
        Schema $$98 = $$02.addSchema(2202, SAME_NAMESPACED);
        $$02.addFixer((DataFix)new ChunkBiomeFix($$98, false));
        Schema $$99 = $$02.addSchema(2209, SAME_NAMESPACED);
        UnaryOperator<String> $$100 = DataFixers.createRenamer("minecraft:bee_hive", "minecraft:beehive");
        $$02.addFixer(ItemRenameFix.create($$99, "Rename bee_hive item to beehive", $$100));
        $$02.addFixer((DataFix)new PoiTypeRenameFix($$99, "Rename bee_hive poi to beehive", (Function<String, String>)$$100));
        $$02.addFixer(BlockRenameFix.create($$99, "Rename bee_hive block to beehive", $$100));
        Schema $$101 = $$02.addSchema(2211, SAME_NAMESPACED);
        $$02.addFixer((DataFix)new StructureReferenceCountFix($$101, false));
        Schema $$102 = $$02.addSchema(2218, SAME_NAMESPACED);
        $$02.addFixer((DataFix)new ForcePoiRebuild($$102, false));
        Schema $$103 = $$02.addSchema(2501, V2501::new);
        $$02.addFixer((DataFix)new FurnaceRecipeFix($$103, true));
        Schema $$104 = $$02.addSchema(2502, V2502::new);
        $$02.addFixer((DataFix)new AddNewChoices($$104, "Added Hoglin", References.ENTITY));
        Schema $$105 = $$02.addSchema(2503, SAME_NAMESPACED);
        $$02.addFixer((DataFix)new WallPropertyFix($$105, false));
        $$02.addFixer((DataFix)new AdvancementsRenameFix($$105, false, "Composter category change", (Function<String, String>)DataFixers.createRenamer("minecraft:recipes/misc/composter", "minecraft:recipes/decorations/composter")));
        Schema $$106 = $$02.addSchema(2505, V2505::new);
        $$02.addFixer((DataFix)new AddNewChoices($$106, "Added Piglin", References.ENTITY));
        $$02.addFixer((DataFix)new MemoryExpiryDataFix($$106, "minecraft:villager"));
        Schema $$107 = $$02.addSchema(2508, SAME_NAMESPACED);
        $$02.addFixer(ItemRenameFix.create($$107, "Renamed fungi items to fungus", DataFixers.createRenamer((Map<String, String>)ImmutableMap.of((Object)"minecraft:warped_fungi", (Object)"minecraft:warped_fungus", (Object)"minecraft:crimson_fungi", (Object)"minecraft:crimson_fungus"))));
        $$02.addFixer(BlockRenameFix.create($$107, "Renamed fungi blocks to fungus", DataFixers.createRenamer((Map<String, String>)ImmutableMap.of((Object)"minecraft:warped_fungi", (Object)"minecraft:warped_fungus", (Object)"minecraft:crimson_fungi", (Object)"minecraft:crimson_fungus"))));
        Schema $$108 = $$02.addSchema(2509, V2509::new);
        $$02.addFixer((DataFix)new EntityZombifiedPiglinRenameFix($$108));
        $$02.addFixer(ItemRenameFix.create($$108, "Rename zombie pigman egg item", DataFixers.createRenamer(EntityZombifiedPiglinRenameFix.RENAMED_IDS)));
        Schema $$109 = $$02.addSchema(2511, SAME_NAMESPACED);
        $$02.addFixer((DataFix)new EntityProjectileOwnerFix($$109));
        Schema $$110 = $$02.addSchema(2514, SAME_NAMESPACED);
        $$02.addFixer((DataFix)new EntityUUIDFix($$110));
        $$02.addFixer((DataFix)new BlockEntityUUIDFix($$110));
        $$02.addFixer((DataFix)new PlayerUUIDFix($$110));
        $$02.addFixer((DataFix)new LevelUUIDFix($$110));
        $$02.addFixer((DataFix)new SavedDataUUIDFix($$110));
        $$02.addFixer((DataFix)new ItemStackUUIDFix($$110));
        Schema $$111 = $$02.addSchema(2516, SAME_NAMESPACED);
        $$02.addFixer((DataFix)new GossipUUIDFix($$111, "minecraft:villager"));
        $$02.addFixer((DataFix)new GossipUUIDFix($$111, "minecraft:zombie_villager"));
        Schema $$112 = $$02.addSchema(2518, SAME_NAMESPACED);
        $$02.addFixer((DataFix)new JigsawPropertiesFix($$112, false));
        $$02.addFixer((DataFix)new JigsawRotationFix($$112, false));
        Schema $$113 = $$02.addSchema(2519, V2519::new);
        $$02.addFixer((DataFix)new AddNewChoices($$113, "Added Strider", References.ENTITY));
        Schema $$114 = $$02.addSchema(2522, V2522::new);
        $$02.addFixer((DataFix)new AddNewChoices($$114, "Added Zoglin", References.ENTITY));
        Schema $$115 = $$02.addSchema(2523, SAME_NAMESPACED);
        $$02.addFixer((DataFix)new AttributesRename($$115));
        Schema $$116 = $$02.addSchema(2527, SAME_NAMESPACED);
        $$02.addFixer((DataFix)new BitStorageAlignFix($$116));
        Schema $$117 = $$02.addSchema(2528, SAME_NAMESPACED);
        $$02.addFixer(ItemRenameFix.create($$117, "Rename soul fire torch and soul fire lantern", DataFixers.createRenamer((Map<String, String>)ImmutableMap.of((Object)"minecraft:soul_fire_torch", (Object)"minecraft:soul_torch", (Object)"minecraft:soul_fire_lantern", (Object)"minecraft:soul_lantern"))));
        $$02.addFixer(BlockRenameFix.create($$117, "Rename soul fire torch and soul fire lantern", DataFixers.createRenamer((Map<String, String>)ImmutableMap.of((Object)"minecraft:soul_fire_torch", (Object)"minecraft:soul_torch", (Object)"minecraft:soul_fire_wall_torch", (Object)"minecraft:soul_wall_torch", (Object)"minecraft:soul_fire_lantern", (Object)"minecraft:soul_lantern"))));
        Schema $$118 = $$02.addSchema(2529, SAME_NAMESPACED);
        $$02.addFixer((DataFix)new StriderGravityFix($$118, false));
        Schema $$119 = $$02.addSchema(2531, SAME_NAMESPACED);
        $$02.addFixer((DataFix)new RedstoneWireConnectionsFix($$119));
        Schema $$120 = $$02.addSchema(2533, SAME_NAMESPACED);
        $$02.addFixer((DataFix)new VillagerFollowRangeFix($$120));
        Schema $$121 = $$02.addSchema(2535, SAME_NAMESPACED);
        $$02.addFixer((DataFix)new EntityShulkerRotationFix($$121));
        Schema $$1222 = $$02.addSchema(2550, SAME_NAMESPACED);
        $$02.addFixer((DataFix)new WorldGenSettingsFix($$1222));
        Schema $$123 = $$02.addSchema(2551, V2551::new);
        $$02.addFixer((DataFix)new WriteAndReadFix($$123, "add types to WorldGenData", References.WORLD_GEN_SETTINGS));
        Schema $$124 = $$02.addSchema(2552, SAME_NAMESPACED);
        $$02.addFixer((DataFix)new RenameBiomesFix($$124, false, "Nether biome rename", (Map<String, String>)ImmutableMap.of((Object)"minecraft:nether", (Object)"minecraft:nether_wastes")));
        Schema $$125 = $$02.addSchema(2553, SAME_NAMESPACED);
        $$02.addFixer((DataFix)new BiomeFix($$125, false));
        Schema $$126 = $$02.addSchema(2558, SAME_NAMESPACED);
        $$02.addFixer((DataFix)new MissingDimensionFix($$126, false));
        $$02.addFixer((DataFix)new OptionsRenameFieldFix($$126, false, "Rename swapHands setting", "key_key.swapHands", "key_key.swapOffhand"));
        Schema $$127 = $$02.addSchema(2568, V2568::new);
        $$02.addFixer((DataFix)new AddNewChoices($$127, "Added Piglin Brute", References.ENTITY));
        Schema $$128 = $$02.addSchema(2571, V2571::new);
        $$02.addFixer((DataFix)new AddNewChoices($$128, "Added Goat", References.ENTITY));
        Schema $$129 = $$02.addSchema(2679, SAME_NAMESPACED);
        $$02.addFixer((DataFix)new CauldronRenameFix($$129, false));
        Schema $$130 = $$02.addSchema(2680, SAME_NAMESPACED);
        $$02.addFixer(ItemRenameFix.create($$130, "Renamed grass path item to dirt path", DataFixers.createRenamer("minecraft:grass_path", "minecraft:dirt_path")));
        $$02.addFixer(BlockRenameFixWithJigsaw.create($$130, "Renamed grass path block to dirt path", DataFixers.createRenamer("minecraft:grass_path", "minecraft:dirt_path")));
        Schema $$131 = $$02.addSchema(2684, V2684::new);
        $$02.addFixer((DataFix)new AddNewChoices($$131, "Added Sculk Sensor", References.BLOCK_ENTITY));
        Schema $$132 = $$02.addSchema(2686, V2686::new);
        $$02.addFixer((DataFix)new AddNewChoices($$132, "Added Axolotl", References.ENTITY));
        Schema $$133 = $$02.addSchema(2688, V2688::new);
        $$02.addFixer((DataFix)new AddNewChoices($$133, "Added Glow Squid", References.ENTITY));
        $$02.addFixer((DataFix)new AddNewChoices($$133, "Added Glow Item Frame", References.ENTITY));
        Schema $$134 = $$02.addSchema(2690, SAME_NAMESPACED);
        ImmutableMap $$135 = ImmutableMap.builder().put((Object)"minecraft:weathered_copper_block", (Object)"minecraft:oxidized_copper_block").put((Object)"minecraft:semi_weathered_copper_block", (Object)"minecraft:weathered_copper_block").put((Object)"minecraft:lightly_weathered_copper_block", (Object)"minecraft:exposed_copper_block").put((Object)"minecraft:weathered_cut_copper", (Object)"minecraft:oxidized_cut_copper").put((Object)"minecraft:semi_weathered_cut_copper", (Object)"minecraft:weathered_cut_copper").put((Object)"minecraft:lightly_weathered_cut_copper", (Object)"minecraft:exposed_cut_copper").put((Object)"minecraft:weathered_cut_copper_stairs", (Object)"minecraft:oxidized_cut_copper_stairs").put((Object)"minecraft:semi_weathered_cut_copper_stairs", (Object)"minecraft:weathered_cut_copper_stairs").put((Object)"minecraft:lightly_weathered_cut_copper_stairs", (Object)"minecraft:exposed_cut_copper_stairs").put((Object)"minecraft:weathered_cut_copper_slab", (Object)"minecraft:oxidized_cut_copper_slab").put((Object)"minecraft:semi_weathered_cut_copper_slab", (Object)"minecraft:weathered_cut_copper_slab").put((Object)"minecraft:lightly_weathered_cut_copper_slab", (Object)"minecraft:exposed_cut_copper_slab").put((Object)"minecraft:waxed_semi_weathered_copper", (Object)"minecraft:waxed_weathered_copper").put((Object)"minecraft:waxed_lightly_weathered_copper", (Object)"minecraft:waxed_exposed_copper").put((Object)"minecraft:waxed_semi_weathered_cut_copper", (Object)"minecraft:waxed_weathered_cut_copper").put((Object)"minecraft:waxed_lightly_weathered_cut_copper", (Object)"minecraft:waxed_exposed_cut_copper").put((Object)"minecraft:waxed_semi_weathered_cut_copper_stairs", (Object)"minecraft:waxed_weathered_cut_copper_stairs").put((Object)"minecraft:waxed_lightly_weathered_cut_copper_stairs", (Object)"minecraft:waxed_exposed_cut_copper_stairs").put((Object)"minecraft:waxed_semi_weathered_cut_copper_slab", (Object)"minecraft:waxed_weathered_cut_copper_slab").put((Object)"minecraft:waxed_lightly_weathered_cut_copper_slab", (Object)"minecraft:waxed_exposed_cut_copper_slab").build();
        $$02.addFixer(ItemRenameFix.create($$134, "Renamed copper block items to new oxidized terms", DataFixers.createRenamer((Map<String, String>)$$135)));
        $$02.addFixer(BlockRenameFixWithJigsaw.create($$134, "Renamed copper blocks to new oxidized terms", DataFixers.createRenamer((Map<String, String>)$$135)));
        Schema $$136 = $$02.addSchema(2691, SAME_NAMESPACED);
        ImmutableMap $$137 = ImmutableMap.builder().put((Object)"minecraft:waxed_copper", (Object)"minecraft:waxed_copper_block").put((Object)"minecraft:oxidized_copper_block", (Object)"minecraft:oxidized_copper").put((Object)"minecraft:weathered_copper_block", (Object)"minecraft:weathered_copper").put((Object)"minecraft:exposed_copper_block", (Object)"minecraft:exposed_copper").build();
        $$02.addFixer(ItemRenameFix.create($$136, "Rename copper item suffixes", DataFixers.createRenamer((Map<String, String>)$$137)));
        $$02.addFixer(BlockRenameFixWithJigsaw.create($$136, "Rename copper blocks suffixes", DataFixers.createRenamer((Map<String, String>)$$137)));
        Schema $$138 = $$02.addSchema(2693, SAME_NAMESPACED);
        $$02.addFixer((DataFix)new AddFlagIfNotPresentFix($$138, References.WORLD_GEN_SETTINGS, "has_increased_height_already", false));
        Schema $$139 = $$02.addSchema(2696, SAME_NAMESPACED);
        ImmutableMap $$140 = ImmutableMap.builder().put((Object)"minecraft:grimstone", (Object)"minecraft:deepslate").put((Object)"minecraft:grimstone_slab", (Object)"minecraft:cobbled_deepslate_slab").put((Object)"minecraft:grimstone_stairs", (Object)"minecraft:cobbled_deepslate_stairs").put((Object)"minecraft:grimstone_wall", (Object)"minecraft:cobbled_deepslate_wall").put((Object)"minecraft:polished_grimstone", (Object)"minecraft:polished_deepslate").put((Object)"minecraft:polished_grimstone_slab", (Object)"minecraft:polished_deepslate_slab").put((Object)"minecraft:polished_grimstone_stairs", (Object)"minecraft:polished_deepslate_stairs").put((Object)"minecraft:polished_grimstone_wall", (Object)"minecraft:polished_deepslate_wall").put((Object)"minecraft:grimstone_tiles", (Object)"minecraft:deepslate_tiles").put((Object)"minecraft:grimstone_tile_slab", (Object)"minecraft:deepslate_tile_slab").put((Object)"minecraft:grimstone_tile_stairs", (Object)"minecraft:deepslate_tile_stairs").put((Object)"minecraft:grimstone_tile_wall", (Object)"minecraft:deepslate_tile_wall").put((Object)"minecraft:grimstone_bricks", (Object)"minecraft:deepslate_bricks").put((Object)"minecraft:grimstone_brick_slab", (Object)"minecraft:deepslate_brick_slab").put((Object)"minecraft:grimstone_brick_stairs", (Object)"minecraft:deepslate_brick_stairs").put((Object)"minecraft:grimstone_brick_wall", (Object)"minecraft:deepslate_brick_wall").put((Object)"minecraft:chiseled_grimstone", (Object)"minecraft:chiseled_deepslate").build();
        $$02.addFixer(ItemRenameFix.create($$139, "Renamed grimstone block items to deepslate", DataFixers.createRenamer((Map<String, String>)$$140)));
        $$02.addFixer(BlockRenameFixWithJigsaw.create($$139, "Renamed grimstone blocks to deepslate", DataFixers.createRenamer((Map<String, String>)$$140)));
        Schema $$141 = $$02.addSchema(2700, SAME_NAMESPACED);
        $$02.addFixer(BlockRenameFixWithJigsaw.create($$141, "Renamed cave vines blocks", DataFixers.createRenamer((Map<String, String>)ImmutableMap.of((Object)"minecraft:cave_vines_head", (Object)"minecraft:cave_vines", (Object)"minecraft:cave_vines_body", (Object)"minecraft:cave_vines_plant"))));
        Schema $$142 = $$02.addSchema(2701, SAME_NAMESPACED);
        $$02.addFixer((DataFix)new SavedDataFeaturePoolElementFix($$142));
        Schema $$143 = $$02.addSchema(2702, SAME_NAMESPACED);
        $$02.addFixer((DataFix)new AbstractArrowPickupFix($$143));
        Schema $$144 = $$02.addSchema(2704, V2704::new);
        $$02.addFixer((DataFix)new AddNewChoices($$144, "Added Goat", References.ENTITY));
        Schema $$145 = $$02.addSchema(2707, V2707::new);
        $$02.addFixer((DataFix)new AddNewChoices($$145, "Added Marker", References.ENTITY));
        $$02.addFixer((DataFix)new AddFlagIfNotPresentFix($$145, References.WORLD_GEN_SETTINGS, "has_increased_height_already", true));
        Schema $$146 = $$02.addSchema(2710, SAME_NAMESPACED);
        $$02.addFixer((DataFix)new StatsRenameFix($$146, "Renamed play_one_minute stat to play_time", (Map<String, String>)ImmutableMap.of((Object)"minecraft:play_one_minute", (Object)"minecraft:play_time")));
        Schema $$147 = $$02.addSchema(2717, SAME_NAMESPACED);
        $$02.addFixer(ItemRenameFix.create($$147, "Rename azalea_leaves_flowers", DataFixers.createRenamer((Map<String, String>)ImmutableMap.of((Object)"minecraft:azalea_leaves_flowers", (Object)"minecraft:flowering_azalea_leaves"))));
        $$02.addFixer(BlockRenameFix.create($$147, "Rename azalea_leaves_flowers items", DataFixers.createRenamer((Map<String, String>)ImmutableMap.of((Object)"minecraft:azalea_leaves_flowers", (Object)"minecraft:flowering_azalea_leaves"))));
        Schema $$148 = $$02.addSchema(2825, SAME_NAMESPACED);
        $$02.addFixer((DataFix)new AddFlagIfNotPresentFix($$148, References.WORLD_GEN_SETTINGS, "has_increased_height_already", false));
        Schema $$149 = $$02.addSchema(2831, V2831::new);
        $$02.addFixer((DataFix)new SpawnerDataFix($$149));
        Schema $$150 = $$02.addSchema(2832, V2832::new);
        $$02.addFixer((DataFix)new WorldGenSettingsHeightAndBiomeFix($$150));
        $$02.addFixer((DataFix)new ChunkHeightAndBiomeFix($$150));
        Schema $$151 = $$02.addSchema(2833, SAME_NAMESPACED);
        $$02.addFixer((DataFix)new WorldGenSettingsDisallowOldCustomWorldsFix($$151));
        Schema $$152 = $$02.addSchema(2838, SAME_NAMESPACED);
        $$02.addFixer((DataFix)new RenameBiomesFix($$152, false, "Caves and Cliffs biome renames", (Map<String, String>)CavesAndCliffsRenames.RENAMES));
        Schema $$153 = $$02.addSchema(2841, SAME_NAMESPACED);
        $$02.addFixer((DataFix)new ChunkProtoTickListFix($$153));
        Schema $$154 = $$02.addSchema(2842, V2842::new);
        $$02.addFixer((DataFix)new ChunkRenamesFix($$154));
        Schema $$155 = $$02.addSchema(2843, SAME_NAMESPACED);
        $$02.addFixer((DataFix)new OverreachingTickFix($$155));
        $$02.addFixer((DataFix)new RenameBiomesFix($$155, false, "Remove Deep Warm Ocean", (Map<String, String>)Map.of((Object)"minecraft:deep_warm_ocean", (Object)"minecraft:warm_ocean")));
        Schema $$156 = $$02.addSchema(2846, SAME_NAMESPACED);
        $$02.addFixer((DataFix)new AdvancementsRenameFix($$156, false, "Rename some C&C part 2 advancements", (Function<String, String>)DataFixers.createRenamer((Map<String, String>)ImmutableMap.of((Object)"minecraft:husbandry/play_jukebox_in_meadows", (Object)"minecraft:adventure/play_jukebox_in_meadows", (Object)"minecraft:adventure/caves_and_cliff", (Object)"minecraft:adventure/fall_from_world_height", (Object)"minecraft:adventure/ride_strider_in_overworld_lava", (Object)"minecraft:nether/ride_strider_in_overworld_lava"))));
        Schema $$157 = $$02.addSchema(2852, SAME_NAMESPACED);
        $$02.addFixer((DataFix)new WorldGenSettingsDisallowOldCustomWorldsFix($$157));
        Schema $$158 = $$02.addSchema(2967, SAME_NAMESPACED);
        $$02.addFixer((DataFix)new StructureSettingsFlattenFix($$158));
        Schema $$159 = $$02.addSchema(2970, SAME_NAMESPACED);
        $$02.addFixer((DataFix)new StructuresBecomeConfiguredFix($$159));
        Schema $$160 = $$02.addSchema(3076, V3076::new);
        $$02.addFixer((DataFix)new AddNewChoices($$160, "Added Sculk Catalyst", References.BLOCK_ENTITY));
        Schema $$161 = $$02.addSchema(3077, SAME_NAMESPACED);
        $$02.addFixer((DataFix)new ChunkDeleteIgnoredLightDataFix($$161));
        Schema $$162 = $$02.addSchema(3078, V3078::new);
        $$02.addFixer((DataFix)new AddNewChoices($$162, "Added Frog", References.ENTITY));
        $$02.addFixer((DataFix)new AddNewChoices($$162, "Added Tadpole", References.ENTITY));
        $$02.addFixer((DataFix)new AddNewChoices($$162, "Added Sculk Shrieker", References.BLOCK_ENTITY));
        Schema $$163 = $$02.addSchema(3081, V3081::new);
        $$02.addFixer((DataFix)new AddNewChoices($$163, "Added Warden", References.ENTITY));
        Schema $$164 = $$02.addSchema(3082, V3082::new);
        $$02.addFixer((DataFix)new AddNewChoices($$164, "Added Chest Boat", References.ENTITY));
        Schema $$165 = $$02.addSchema(3083, V3083::new);
        $$02.addFixer((DataFix)new AddNewChoices($$165, "Added Allay", References.ENTITY));
        Schema $$166 = $$02.addSchema(3084, SAME_NAMESPACED);
        $$02.addFixer((DataFix)new SimpleRenameFix($$166, References.GAME_EVENT_NAME, (Map<String, String>)ImmutableMap.builder().put((Object)"minecraft:block_press", (Object)"minecraft:block_activate").put((Object)"minecraft:block_switch", (Object)"minecraft:block_activate").put((Object)"minecraft:block_unpress", (Object)"minecraft:block_deactivate").put((Object)"minecraft:block_unswitch", (Object)"minecraft:block_deactivate").put((Object)"minecraft:drinking_finish", (Object)"minecraft:drink").put((Object)"minecraft:elytra_free_fall", (Object)"minecraft:elytra_glide").put((Object)"minecraft:entity_damaged", (Object)"minecraft:entity_damage").put((Object)"minecraft:entity_dying", (Object)"minecraft:entity_die").put((Object)"minecraft:entity_killed", (Object)"minecraft:entity_die").put((Object)"minecraft:mob_interact", (Object)"minecraft:entity_interact").put((Object)"minecraft:ravager_roar", (Object)"minecraft:entity_roar").put((Object)"minecraft:ring_bell", (Object)"minecraft:block_change").put((Object)"minecraft:shulker_close", (Object)"minecraft:container_close").put((Object)"minecraft:shulker_open", (Object)"minecraft:container_open").put((Object)"minecraft:wolf_shaking", (Object)"minecraft:entity_shake").build()));
        Schema $$167 = $$02.addSchema(3086, SAME_NAMESPACED);
        $$02.addFixer((DataFix)new EntityVariantFix($$167, "Change cat variant type", References.ENTITY, "minecraft:cat", "CatType", (IntFunction<String>)((IntFunction)arg_0 -> ((Int2ObjectOpenHashMap)Util.make(new Int2ObjectOpenHashMap(), $$0 -> {
            $$0.defaultReturnValue((Object)"minecraft:tabby");
            $$0.put(0, (Object)"minecraft:tabby");
            $$0.put(1, (Object)"minecraft:black");
            $$0.put(2, (Object)"minecraft:red");
            $$0.put(3, (Object)"minecraft:siamese");
            $$0.put(4, (Object)"minecraft:british");
            $$0.put(5, (Object)"minecraft:calico");
            $$0.put(6, (Object)"minecraft:persian");
            $$0.put(7, (Object)"minecraft:ragdoll");
            $$0.put(8, (Object)"minecraft:white");
            $$0.put(9, (Object)"minecraft:jellie");
            $$0.put(10, (Object)"minecraft:all_black");
        })).get(arg_0))));
        ImmutableMap $$168 = ImmutableMap.builder().put((Object)"textures/entity/cat/tabby.png", (Object)"minecraft:tabby").put((Object)"textures/entity/cat/black.png", (Object)"minecraft:black").put((Object)"textures/entity/cat/red.png", (Object)"minecraft:red").put((Object)"textures/entity/cat/siamese.png", (Object)"minecraft:siamese").put((Object)"textures/entity/cat/british_shorthair.png", (Object)"minecraft:british").put((Object)"textures/entity/cat/calico.png", (Object)"minecraft:calico").put((Object)"textures/entity/cat/persian.png", (Object)"minecraft:persian").put((Object)"textures/entity/cat/ragdoll.png", (Object)"minecraft:ragdoll").put((Object)"textures/entity/cat/white.png", (Object)"minecraft:white").put((Object)"textures/entity/cat/jellie.png", (Object)"minecraft:jellie").put((Object)"textures/entity/cat/all_black.png", (Object)"minecraft:all_black").build();
        $$02.addFixer((DataFix)new CriteriaRenameFix($$167, "Migrate cat variant advancement", "minecraft:husbandry/complete_catalogue", (UnaryOperator<String>)((UnaryOperator)$$1 -> (String)$$168.getOrDefault($$1, $$1))));
        Schema $$169 = $$02.addSchema(3087, SAME_NAMESPACED);
        $$02.addFixer((DataFix)new EntityVariantFix($$169, "Change frog variant type", References.ENTITY, "minecraft:frog", "Variant", (IntFunction<String>)((IntFunction)arg_0 -> ((Int2ObjectOpenHashMap)Util.make(new Int2ObjectOpenHashMap(), $$0 -> {
            $$0.put(0, (Object)"minecraft:temperate");
            $$0.put(1, (Object)"minecraft:warm");
            $$0.put(2, (Object)"minecraft:cold");
        })).get(arg_0))));
        Schema $$170 = $$02.addSchema(3088, SAME_NAMESPACED);
        $$02.addFixer((DataFix)new BlendingDataFix($$170));
        Schema $$171 = $$02.addSchema(3090, SAME_NAMESPACED);
        $$02.addFixer((DataFix)new EntityPaintingFieldsRenameFix($$171));
        Schema $$172 = $$02.addSchema(3093, SAME_NAMESPACED);
        $$02.addFixer((DataFix)new EntityGoatMissingStateFix($$172));
        Schema $$173 = $$02.addSchema(3094, SAME_NAMESPACED);
        $$02.addFixer((DataFix)new GoatHornIdFix($$173));
        Schema $$174 = $$02.addSchema(3097, SAME_NAMESPACED);
        $$02.addFixer((DataFix)new FilteredBooksFix($$174));
        $$02.addFixer((DataFix)new FilteredSignsFix($$174));
        Map $$175 = Map.of((Object)"minecraft:british", (Object)"minecraft:british_shorthair");
        $$02.addFixer((DataFix)new VariantRenameFix($$174, "Rename british shorthair", References.ENTITY, "minecraft:cat", (Map<String, String>)$$175));
        $$02.addFixer((DataFix)new CriteriaRenameFix($$174, "Migrate cat variant advancement for british shorthair", "minecraft:husbandry/complete_catalogue", (UnaryOperator<String>)((UnaryOperator)$$1 -> (String)$$175.getOrDefault($$1, $$1))));
        $$02.addFixer((DataFix)new PoiTypeRemoveFix($$174, "Remove unpopulated villager PoI types", (Predicate<String>)((Predicate)arg_0 -> ((Set)Set.of((Object)"minecraft:unemployed", (Object)"minecraft:nitwit")).contains(arg_0))));
        Schema $$176 = $$02.addSchema(3108, SAME_NAMESPACED);
        $$02.addFixer((DataFix)new BlendingDataRemoveFromNetherEndFix($$176));
        Schema $$177 = $$02.addSchema(3201, SAME_NAMESPACED);
        $$02.addFixer((DataFix)new OptionsProgrammerArtFix($$177));
        Schema $$178 = $$02.addSchema(3202, V3202::new);
        $$02.addFixer((DataFix)new AddNewChoices($$178, "Added Hanging Sign", References.BLOCK_ENTITY));
        Schema $$179 = $$02.addSchema(3203, V3203::new);
        $$02.addFixer((DataFix)new AddNewChoices($$179, "Added Camel", References.ENTITY));
        Schema $$180 = $$02.addSchema(3204, V3204::new);
        $$02.addFixer((DataFix)new AddNewChoices($$180, "Added Chiseled Bookshelf", References.BLOCK_ENTITY));
        Schema $$181 = $$02.addSchema(3209, SAME_NAMESPACED);
        $$02.addFixer((DataFix)new ItemStackSpawnEggFix($$181, false, "minecraft:pig_spawn_egg"));
        Schema $$182 = $$02.addSchema(3214, SAME_NAMESPACED);
        $$02.addFixer((DataFix)new OptionsAmbientOcclusionFix($$182));
        Schema $$183 = $$02.addSchema(3319, SAME_NAMESPACED);
        $$02.addFixer((DataFix)new OptionsAccessibilityOnboardFix($$183));
        Schema $$184 = $$02.addSchema(3322, SAME_NAMESPACED);
        $$02.addFixer((DataFix)new EffectDurationFix($$184));
    }

    private static UnaryOperator<String> createRenamer(Map<String, String> $$0) {
        return $$1 -> (String)$$0.getOrDefault($$1, $$1);
    }

    private static UnaryOperator<String> createRenamer(String $$0, String $$1) {
        return $$2 -> Objects.equals((Object)$$2, (Object)$$0) ? $$1 : $$2;
    }
}